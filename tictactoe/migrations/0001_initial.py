# Generated by Django 4.2.7 on 2024-01-02 12:55

from django.db import migrations, models
import django.db.models.deletion
import tictactoe.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('session_id', models.UUIDField(unique=True)),
                ('session_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('player_id', models.UUIDField(unique=True)),
                ('symbol', tictactoe.fields.SymbolField(default=None, max_length=1)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='SessionPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.BooleanField(default=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_player', to='tictactoe.player')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_session', to='tictactoe.gamesession')),
            ],
        ),
        migrations.AddField(
            model_name='gamesession',
            name='players',
            field=models.ManyToManyField(related_name='sessions', through='tictactoe.SessionPlayer', to='tictactoe.player'),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_time', models.DateTimeField(auto_now=True)),
                ('board', tictactoe.fields.BoardField(default=[[None, None, None], [None, None, None], [None, None, None]])),
                ('num_symbols', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('is_ended', models.BooleanField(default=False)),
                ('active_player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games', to='tictactoe.player')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='tictactoe.gamesession')),
                ('winner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_games', to='tictactoe.player')),
            ],
            options={
                'ordering': ('session', '-game_time'),
            },
        ),
        migrations.CreateModel(
            name='ComputerPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='tictactoe.player')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='computer_player', to='tictactoe.gamesession')),
            ],
            options={
                'ordering': ('session',),
            },
        ),
        migrations.AddConstraint(
            model_name='sessionplayer',
            constraint=models.UniqueConstraint(fields=('session', 'player'), name='Unique index on session and player'),
        ),
        migrations.AddConstraint(
            model_name='sessionplayer',
            constraint=models.UniqueConstraint(condition=models.Q(('owner', True)), fields=('session', 'owner'), name='Unique index on session and owner'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('session', 'is_active'), name='Unique constraint on session and is_active'),
        ),
    ]
